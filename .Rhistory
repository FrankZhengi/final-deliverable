print(j)
}
}
for (i in 1:5) {
j =""
for (k in 1:5){
j <- paste0(j, "a")
}
print(j)
}
j = ""
for (k in 1:5) {
j <- paste0(j, "a")
print(j)
}
j = ""
for (k in 1:5) {
#j <- paste0(j, "a")
#print(j)
cat(j, "a", sep = "")
}
source("~/info201_BE_loops/loop_practice.R")
source("~/info201_BE_loops/loop_practice.R")
source("~/info201_BE_loops/loop_practice.R")
source("~/info201_BE_loops/loop_practice.R")
source("~/info201_BE_loops/loop_practice.R")
source("~/info201_BE_loops/loop_practice.R")
a -> c(4, 4, 8)
source("~/info201_BE_loops/loop_practice.R")
a
source("~/info201_BE_loops/loop_practice.R")
c
source("~/info201_BE_loops/loop_practice.R")
min(grades)
lapply(grades, min)
lapply("grades", "min")
lapply(grades, min())
for (items in grade) {}
min(grades)
source("~/info201_BE_loops/loop_practice.R")
applicant$languages
applicant[["languages"]]
applicant["languages"]
applicant[languages]
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
fluidConversion(6523)
gallon
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
fluidConversion(6523)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
fluidConversion(6523)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
fluidConversion(6523)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
fluidConversion((6523))
fluidConversion(6523)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
fluidConversion(6523)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
fluidConversion(6523)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
View(parks_and_recs)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
help check
help check
check help
help(check)
type check
check
typeof(check)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/Documents/Info 201/analysis.R")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
library(stringr)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/Documents/Info 201/analysis.R")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
remove_digits("i90", "cse 142")
remove_digits(c("i90", "cse 142"))
strings
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
parks_and_recs(2, 3)
parks_and_recs(3, 7)
parks_and_recs(2, 2)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
parks_and_rec(2, 2)
source("~/a0-foundational-skills-FrankZhengi/Assignment.r")
parks_and_rec(2, 2)
source("~/Documents/Info 201/Quiz3.R")
source("~/Documents/Info 201/Quiz3.R")
source("~/Documents/Info 201/Quiz3.R")
source("~/Documents/Info 201/Quiz3.R")
install.packages("nycflights13")
source("~/Documents/Info 201/Quiz3.R")
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
install.packages("nycflights13")
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(f)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
help mode
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(f)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(f)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(f)
View(f)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(late)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(late)
View(late)
View(f)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(f)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(late)
View(late)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(late)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(z)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(z)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
dest
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(z)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(z)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(z)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(x)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(x)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(avg)
View(all_lates)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
all_lates
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(avg)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
v <- vector("list", 103)
v
avg <- filter(f, dest == x(k))
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(v)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(v)
View(v)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(v)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(late)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(v)
View(avg)
View(f)
View(avg)
View(f)
View(avg)
View(v)
View(f)
View(f)
View(f)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(f)
View(f)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(f)
View(late)
View(late)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(v)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(v)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(v)
View(late)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(late)
source("~/Documents/Info 201/Quiz3.R", echo=TRUE)
View(late)
View(late)
source("~/Downloads/lab4.R", echo=TRUE)
source("~/Downloads/lab4.R", echo=TRUE)
View(fruits_df)
source("~/Downloads/lab4.R", echo=TRUE)
source("~/Downloads/lab4.R", echo=TRUE)
source("~/Downloads/lab4.R", echo=TRUE)
source("~/Downloads/lab4.R", echo=TRUE)
# Use the filter() function to filter a row containing a specific value
# from the dataframe
filter(fruits_df, fruits == "Mangoes")
# Use mutate() function to add a column that contains your name
# and values from another column from the dataframe (hint: use paste)
mutate(fruits_df,
fruit_name = paste("Frank,", numbers))
# Use the arrange() function to sort numbers in descending order (high -> low)
arrange(fruits_df, numbers)
# Use the arrange() function to sort numbers in descending order (high -> low)
arrange(fruits_df, -numbers)
# Use the summarize() function to sum up every number together
summarize(fruits_df, sum(numbers))
# Use the summarize() function to sum up every number together
summarize(fruits_df, sum_of_numbers = sum(numbers))
# Do the following in order all in one statement:
# 1. select a specific column
# 2. filter by a specific value
# 3. add a column containing your name and the value you filtered for
# You can do this using the pipe operator %>%
# or nested functions (select(filter()) ...)
select(fruits_df, fruits) %>% filter(numbers == 3) %>% mutate(paste("Frank", 3))
# Do the following in order all in one statement:
# 1. select a specific column
# 2. filter by a specific value
# 3. add a column containing your name and the value you filtered for
# You can do this using the pipe operator %>%
# or nested functions (select(filter()) ...)
select(fruits_df, fruits) %>% filter("kiwi") %>% mutate(paste("Frank", 3))
# Do the following in order all in one statement:
# 1. select a specific column
# 2. filter by a specific value
# 3. add a column containing your name and the value you filtered for
# You can do this using the pipe operator %>%
# or nested functions (select(filter()) ...)
select(fruits_df, fruits) %>% filter(fruits == "Kiwi") %>% mutate(paste("Frank", 3))
# Do the following in order all in one statement:
# 1. select a specific column
# 2. filter by a specific value
# 3. add a column containing your name and the value you filtered for
# You can do this using the pipe operator %>%
# or nested functions (select(filter()) ...)
select(fruits_df, fruits) %>% filter(numbers == 3) %>% mutate(paste("Frank", 3))
# Do the following in order all in one statement:
# 1. select a specific column
# 2. filter by a specific value
# 3. add a column containing your name and the value you filtered for
# You can do this using the pipe operator %>%
# or nested functions (select(filter()) ...)
select(fruits_df, fruits) %>% filter(Kiwi) %>% mutate(paste("Frank", 3))
# Do the following in order all in one statement:
# 1. select a specific column
# 2. filter by a specific value
# 3. add a column containing your name and the value you filtered for
# You can do this using the pipe operator %>%
# or nested functions (select(filter()) ...)
select(fruits_df, fruits) %>% filter("Kiwi") %>% mutate(paste("Frank", 3))
# Do the following in order all in one statement:
# 1. select a specific column
# 2. filter by a specific value
# 3. add a column containing your name and the value you filtered for
# You can do this using the pipe operator %>%
# or nested functions (select(filter()) ...)
select(fruits_df, fruits) %>% filter(fruits == "Kiwi") %>% mutate(paste("Frank", "Kiwi"))
# Do the following in order all in one statement:
# 1. select a specific column
# 2. filter by a specific value
# 3. add a column containing your name and the value you filtered for
# You can do this using the pipe operator %>%
# or nested functions (select(filter()) ...)
select(fruits_df, fruits) %>% filter(fruits == "Kiwi") %>% mutate(name = paste("Frank", "Kiwi"))
select(fruits) %>%
filter(fruits == "Kiwi") %>%
mutate(name = paste("Frank", "Kiwi"))
View(fruits_df)
# Do the following in order all in one statement:
# 1. select a specific column
# 2. filter by a specific value
# 3. add a column containing your name and the value you filtered for
# You can do this using the pipe operator %>%
# or nested functions (select(filter()) ...)
new_df <- fruits_df %>%
select(fruits) %>%
filter(fruits == "Kiwi") %>%
mutate(name = paste("Frank", "Kiwi"))
View(new_df)
write.csv(new_df, "frank.csv", row.names = FALSE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
# 5) write in a comment "What was the most popular female name in 1994?" and answer
pop_name_1994 <- most_popular_in_year(1994)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
View(names_df)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
#
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/Documents/Info 201/Lect7act.R", echo=TRUE)
source("~/a2-covid-trends-FrankZhengi/analysis.R", echo=TRUE)
View(county_by_day)
View(sum_county_to_state)
View(sum_county_to_state)
install.packages("shiny")
shiny::runApp('Documents/Info 201')
# define UI
ui <- fluidPage(
h1("Survey"),
p("Please answer the following questions:"),
h1("Your Answers:")
)
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
# define UI
ui <- fluidPage(
h1("Survey"),
p("Please answer the following questions:"),
textInput(
inputId = "personName",
label = "What is your name?"
),
checkboxGroupInput(
inputId = "seasons",
label = "What is your favorite season?",
choices = list("Spring" = 1, "Summer" = 2, "Fall" = 3, "Winter" = 4),
selected = 1
),
h1("Your Answers:"),
textOutput(outputId = "nameMessage"),
textOutput(outputId = "radioMessage")
)
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
runApp('Documents/Info 201')
shiny::runApp('final-deliverable-frankzhengi')
source("~/final-deliverable-frankzhengi/intro.r")
source("~/final-deliverable-frankzhengi/summary.R")
source("~/final-deliverable-frankzhengi/ipage3.R")
source("~/final-deliverable-frankzhengi/ipage2.R")
source("~/final-deliverable-frankzhengi/ipage1.R")
runApp('final-deliverable-frankzhengi')
ipage_1 <- tabPanel("Interactive Page 1",
titlePanel("Which region has the highest gas price for all grades in a chosen year?"),
selectInput(inputId = "year_chosen", label = "What year would you like to chose?",
choices = years, selected = 1),
plotOutput("regionplot"),
textOutput("regionmax")
)
source("~/final-deliverable-frankzhengi/ipage1.R")
setwd("~/final-deliverable-frankzhengi")
source("~/final-deliverable-frankzhengi/ipage1.R")
source("~/final-deliverable-frankzhengi/ipage1.R")
runApp()
source("~/final-deliverable-frankzhengi/ipage3.R")
runApp()
runApp()
runApp()
ipage_1 <- tabPanel("Interactive Page 1",
titlePanel("Which region has the highest gas price for all grades in a chosen year?"),
p("On this interactive page, we are using data from the EIA, Energy Informatino Adminstration,
on annual gas prices by the dollar per gallon for U.S. regions to find which has the highest
gas price on a certain year. For the regions, we have the west coast, which includes Alaska
and Hawaii, another west coast that does not include California."),
selectInput(inputId = "year_chosen", label = "What year would you like to chose?",
choices = years, selected = 1),
plotOutput("regionplot"),
textOutput("regionmax")
runApp()
runApp()
source("~/final-deliverable-frankzhengi/ipage1.R")
runApp()
runApp()
library(plotly)
runApp()
install.packages('plotly')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ipage_2 <- tabPanel("Interative Page 2", fluid = T,
selectizeInput(
inputId = "USyear",
label = NULL,
choices = c("Choose a year" = "", USyear),
multiple = FALSE
),
plotlyOutput(outputId = "ye")
)
runApp()
runApp()
runApp()
View(usregion)
View(us_city_avg_df)
View(usregion)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
